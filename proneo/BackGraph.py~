
import random
import tkinter
from PIL import Image,ImageTk

#define
WIDTH = 3100
HEIGHT = 1682.5

CHAIR_GAP = 40 #Between Chairs
TABLE_GAP = 40
CANT_PUT_Y =[2,7,12]
CANT_PUT_X =[]

CANT_PUT   =["0-0","0-1","0-2","0-3","0-4","0-5","0-6","0-7","0-8","0-9","0-10","0-11","0-12","7-0","7-1","7-3","7-4","7-5","7-6","8-0","8-1","3-0","3-8","3-9","6-0","6-8","6-9","9-0","9-8","9-9","12-0","12-8","12-9"]
ROUNDTABLE_PUT = ["3-8","6-8","9-8","12-8"]
ROUNDHALF_PUT = ["3-0","6-0","9-0","12-0"]
WINDOWTABLE_PUT = ["0-0"]
#13*15

#Conversion for Grapics
gra_WIDTH = (WIDTH/4)
gra_HEIGHT= (HEIGHT/4)
gra_CHAIR_GAP =(CHAIR_GAP/4)
gra_TABLE_GAP = (TABLE_GAP/4)
#



class BackGraph:

    world = None
    canvas = None

    Table_img = None
    RoundTable_img = None
    RoundHalf_img = None
    WindowTable_img = None

    Slip = None

    def __init__(self):
        self.world = tkinter.Tk()
        self.world.title(u"Syokudou")
        self.world.geometry("1280x720")
        self.canvas  = tkinter.Canvas(self.world,width = 1280,height=720)
        self.canvas.create_rectangle(0,0,(gra_WIDTH),(gra_HEIGHT),fill = 'green')
        
        #画像データ読込
        self.Table_img       = Image.open('img/objset.png')
        self.RoundTable_img  = Image.open('img/round.png')
        self.RoundHalf_img   = Image.open('img/round_half.png')
        self.WindowTable_img = Image.open('img/windowtable.png')
        
        self.Table_img      = ImageTk.PhotoImage(self.Table_img)
        self.RoundTable_img = ImageTk.PhotoImage(self.RoundTable_img)
        self.RoundHalf_img  = ImageTk.PhotoImage(self.RoundHalf_img)
        self.WindowTable_img= ImageTk.PhotoImage(self.WindowTable_img)
        
        self.canvas.place(x=100,y=100)
        
        #Slip はマスの開始位置をずらす必要があるときに使う変数,Slipが表す長さ分だけ上に配置される。
        self.Slip = 0

    
    def CheckPut_Point(x,y,num):
        check = True
        if(num==0):
            LIST = CANT_PUT
        elif(num==1):
            LIST = ROUNDTABLE_PUT
        elif(num==2):
            LIST = ROUNDHALF_PUT
        elif(num==3):
            LIST = WINDOWTABLE_PUT
        else :
            LIST = CANT_PUT
        for p in LIST:
            res = p.split("-")
            checkX = int(res[0])
            checkY = int(res[1])
            if(checkX==x and checkY==y):
                check = False
                break
            
        return check
    
    def CheckPut(point,xy):
        check = True
        if(xy == 0):
            for num in CANT_PUT_Y:
                if(point==num):
                    check = False
                    break
        if(xy == 1):
            for num in CANT_PUT_X:
                if(point==num):
                    check = False
                    break
        
        return check


    def draw(self):

        self.Slip = 0

        for y in range(13):
            if (self.CheckPut(y,0)):
                for x in range(15):
                    if(self.CheckPut_Point(x,y,0) and self.CheckPut(x,1)):
                        self.canvas.create_image((x*30)+(x*gra_CHAIR_GAP),(y*30)+(y*gra_TABLE_GAP)-self.Slip,image=self.Table_img,anchor=tkinter.NW)
                    elif(not self.CheckPut_Point(x,y,1)):
                        self.canvas.create_image((x*30)+(x*gra_CHAIR_GAP),(y*30)+(y*gra_TABLE_GAP)-self.Slip,image=self.RoundTable_img,anchor=tkinter.NW)
                    elif(not self.CheckPut_Point(x,y,2)):
                        self.canvas.create_image((x*30)+(x*gra_CHAIR_GAP),(y*30)+(y*gra_TABLE_GAP)-self.Slip,image=self.RoundHalf_img,anchor=tkinter.NW)
                    elif(not self.CheckPut_Point(x,y,3)):
                        self.canvas.create_image((x*30)+(x*gra_CHAIR_GAP),(y*30)+(y*gra_TABLE_GAP)-self.Slip,image=self.WindowTable_img,anchor=tkinter.NW)
            else :
                self.Slip+=25
        
        
